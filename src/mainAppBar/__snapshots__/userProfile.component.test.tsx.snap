// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`User profile component renders default avatar if signed in 1`] = `
<div
  className="tour-user-profile"
>
  <div>
    <ForwardRef(IconButton)
      aria-haspopup="true"
      aria-label="Open user menu"
      onClick={[Function]}
      size="large"
      sx={
        Object {
          "color": "primary.contrastText",
          "margin": 1,
        }
      }
    >
      <Memo(ForwardRef(AccountCircleIcon)) />
    </ForwardRef(IconButton)>
    <ForwardRef(Menu)
      anchorEl={null}
      id="simple-menu"
      onClose={[Function]}
      open={false}
    >
      <div
        style={
          Object {
            "paddingBottom": "8px",
            "paddingLeft": "15px",
            "paddingRight": "15px",
            "paddingTop": "8px",
          }
        }
      >
        <ForwardRef(Typography)>
          Signed in as:
        </ForwardRef(Typography)>
        <ForwardRef(Typography)
          sx={
            Object {
              "fontSize": "17px",
              "fontWeight": "bold",
              "paddingTop": "3px",
            }
          }
        >
          anonymous
        </ForwardRef(Typography)>
      </div>
      <ForwardRef(Divider) />
      <ForwardRef(MenuItem)
        id="item-sign-out"
        onClick={[Function]}
      >
        <ForwardRef(ListItemIcon)>
          <Memo(ForwardRef(ExitToAppIcon)) />
        </ForwardRef(ListItemIcon)>
        <ForwardRef(ListItemText)
          primary="logout-button"
        />
      </ForwardRef(MenuItem)>
    </ForwardRef(Menu)>
  </div>
</div>
`;

exports[`User profile component renders sign in button if not signed in 1`] = `
<div
  className="tour-user-profile"
>
  <ForwardRef(Button)
    color="primary"
    onClick={[Function]}
    sx={[Function]}
    variant="contained"
  >
    <ForwardRef(Typography)
      color="inherit"
      noWrap={true}
      sx={
        Object {
          "fontWeight": 500,
          "marginTop": "3px",
        }
      }
    >
      login-button
    </ForwardRef(Typography)>
  </ForwardRef(Button)>
</div>
`;

exports[`User profile component renders sign in button if user signed in via autoLogin 1`] = `
<div
  className="tour-user-profile"
>
  <ForwardRef(Button)
    color="primary"
    onClick={[Function]}
    sx={[Function]}
    variant="contained"
  >
    <ForwardRef(Typography)
      color="inherit"
      noWrap={true}
      sx={
        Object {
          "fontWeight": 500,
          "marginTop": "3px",
        }
      }
    >
      login-button
    </ForwardRef(Typography)>
  </ForwardRef(Button)>
</div>
`;

exports[`User profile component renders user avatar if signed in with avatar url 1`] = `
<div
  className="tour-user-profile"
>
  <div>
    <ForwardRef(IconButton)
      aria-haspopup="true"
      aria-label="Open user menu"
      onClick={[Function]}
      size="small"
      sx={
        Object {
          "color": "primary.contrastText",
          "margin": 1,
        }
      }
    >
      <ForwardRef(Avatar)
        alt="user"
        src="test_url"
      />
    </ForwardRef(IconButton)>
    <ForwardRef(Menu)
      anchorEl={null}
      id="simple-menu"
      onClose={[Function]}
      open={false}
    >
      <div
        style={
          Object {
            "paddingBottom": "8px",
            "paddingLeft": "15px",
            "paddingRight": "15px",
            "paddingTop": "8px",
          }
        }
      >
        <ForwardRef(Typography)>
          Signed in as:
        </ForwardRef(Typography)>
        <ForwardRef(Typography)
          sx={
            Object {
              "fontSize": "17px",
              "fontWeight": "bold",
              "paddingTop": "3px",
            }
          }
        >
          test
        </ForwardRef(Typography)>
      </div>
      <ForwardRef(Divider) />
      <ForwardRef(MenuItem)
        id="item-sign-out"
        onClick={[Function]}
      >
        <ForwardRef(ListItemIcon)>
          <Memo(ForwardRef(ExitToAppIcon)) />
        </ForwardRef(ListItemIcon)>
        <ForwardRef(ListItemText)
          primary="logout-button"
        />
      </ForwardRef(MenuItem)>
    </ForwardRef(Menu)>
  </div>
</div>
`;
