// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin page component should render admin plugins correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "colours": Object {
          "background": "#FAFAFA",
          "blue": "#003088",
          "chip": "#E0E0E0",
          "contrastGrey": "#717171",
          "darkGreen": "#3A7F3A",
          "darkOrange": "#C34F00",
          "footerLink": Object {
            "active": "#E58885",
            "default": "#FFFFFF",
          },
          "grey": "#727272",
          "homePage": Object {
            "blueButton": "#1E5DF8",
            "blueDescription": "#FFFFFF",
            "heading": "#333333",
          },
          "information": "#003088",
          "lightBlue": "#1E5DF8",
          "lightOrange": "#FF6900",
          "link": Object {
            "active": "#E94D36",
            "default": "#1E5DF8",
            "visited": "#BE2BBB",
          },
          "orange": "#C34F00",
          "paper": "#FFFFFF",
          "primary": "#003088",
          "red": "#AC1600",
          "secondary": "#003088",
          "tabsGrey": "#EEEEEE",
          "textSecondary": "rgba(0, 0, 0, 0.54)",
          "type": "default",
          "warning": "#FFA500",
        },
        "direction": "ltr",
        "drawerWidth": 220,
        "footerHeight": "20px",
        "footerPaddingBottom": "8px",
        "footerPaddingTop": "8px",
        "mainAppBarHeight": "64px",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiBadge": Object {
            "colorPrimary": Object {
              "backgroundColor": "#C34F00",
              "color": "white",
            },
          },
          "MuiChip": Object {
            "root": Object {
              "backgroundColor": "#E0E0E0",
            },
          },
          "MuiFormHelperText": Object {
            "root": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
            },
          },
          "MuiFormLabel": Object {
            "asterisk": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
            },
            "root": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
              "&$focused": Object {
                "color": "#003088",
              },
            },
          },
          "MuiInput": Object {
            "underline": Object {
              "&$error:after": Object {
                "borderBottomColor": "#AC1600",
              },
              "&:after": Object {
                "borderBottomColor": "#003088",
              },
            },
          },
          "MuiLink": Object {
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "verticalAlign": "none",
            },
            "root": Object {
              "color": "#003088",
            },
          },
          "MuiOutlinedInput": Object {
            "input": Object {
              "&::placeholder": Object {
                "colour": "rgba(0, 0, 0, 0.54)",
                "opacity": 0.7,
              },
            },
            "root": Object {
              "&$error $notchedOutline": Object {
                "borderColor": "#AC1600",
              },
            },
          },
          "MuiPickersCalendarHeader": Object {
            "dayLabel": Object {
              "color": "#727272",
            },
          },
          "MuiPickersDay": Object {
            "current": Object {
              "color": "#003088",
            },
            "dayDisabled": Object {
              "color": "#727272",
            },
          },
          "MuiPickersMonth": Object {
            "monthDisabled": Object {
              "color": "#727272",
            },
            "monthSelected": Object {
              "color": "#003088",
            },
            "root": Object {
              "&:active": Object {
                "color": "#003088",
              },
              "&:focus": Object {
                "color": "#003088",
              },
            },
          },
          "MuiPickersToolbar": Object {
            "toolbar": Object {
              "backgroundColor": "#003088",
            },
          },
          "MuiPickersYear": Object {
            "root": Object {
              "&:active": Object {
                "color": "#003088",
              },
              "&:focus": Object {
                "color": "#003088",
              },
            },
            "yearDisabled": Object {
              "color": "#727272",
            },
            "yearSelected": Object {
              "color": "#003088",
            },
          },
          "MuiTabs": Object {
            "indicator": Object {
              "color": "#003088",
              "textDecoration": "underline",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FAFAFA",
            "paper": "#FFFFFF",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(0, 33, 95)",
            "light": "rgb(51, 89, 159)",
            "main": "#003088",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(0, 33, 95)",
            "light": "rgb(51, 89, 159)",
            "main": "#003088",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "none",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testKey",
            "pathname": "/admin/download",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/admin/download",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/admin/download",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(WithStyles(AdminPage))>
          <WithStyles(AdminPage)
            adminPageDefaultTab="maintenance"
            dispatch={[Function]}
            plugins={
              Array [
                Object {
                  "admin": true,
                  "displayName": "Admin Download",
                  "link": "/admin/download",
                  "order": 1,
                  "plugin": "datagateway-download",
                  "section": "Admin",
                },
              ]
            }
          >
            <AdminPage
              adminPageDefaultTab="maintenance"
              classes={
                Object {
                  "form": "AdminPage-form-19",
                  "paper": "AdminPage-paper-18",
                  "root": "AdminPage-root-16",
                  "textArea": "AdminPage-textArea-20",
                  "titleText": "AdminPage-titleText-17",
                }
              }
              dispatch={[Function]}
              plugins={
                Array [
                  Object {
                    "admin": true,
                    "displayName": "Admin Download",
                    "link": "/admin/download",
                    "order": 1,
                    "plugin": "datagateway-download",
                    "section": "Admin",
                  },
                ]
              }
            >
              <WithStyles(ForwardRef(Paper))
                className="AdminPage-root-16"
                id="admin-page"
              >
                <ForwardRef(Paper)
                  className="AdminPage-root-16"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  id="admin-page"
                >
                  <div
                    className="MuiPaper-root AdminPage-root-16 MuiPaper-elevation1 MuiPaper-rounded"
                    id="admin-page"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="AdminPage-titleText-17"
                      variant="h3"
                    >
                      <ForwardRef(Typography)
                        className="AdminPage-titleText-17"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        variant="h3"
                      >
                        <h3
                          className="MuiTypography-root AdminPage-titleText-17 MuiTypography-h3"
                        >
                          admin.title
                        </h3>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Tabs))
                      onChange={[Function]}
                      textColor="secondary"
                      value="download"
                    >
                      <ForwardRef(Tabs)
                        classes={
                          Object {
                            "centered": "MuiTabs-centered",
                            "fixed": "MuiTabs-fixed",
                            "flexContainer": "MuiTabs-flexContainer",
                            "flexContainerVertical": "MuiTabs-flexContainerVertical",
                            "indicator": "MuiTabs-indicator",
                            "root": "MuiTabs-root",
                            "scrollButtons": "MuiTabs-scrollButtons",
                            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                            "scrollable": "MuiTabs-scrollable",
                            "scroller": "MuiTabs-scroller",
                            "vertical": "MuiTabs-vertical",
                          }
                        }
                        onChange={[Function]}
                        textColor="secondary"
                        value="download"
                      >
                        <div
                          className="MuiTabs-root"
                        >
                          <div
                            className="MuiTabs-scroller MuiTabs-fixed"
                            onScroll={[Function]}
                            style={
                              Object {
                                "marginBottom": null,
                                "overflow": "hidden",
                              }
                            }
                          >
                            <div
                              className="MuiTabs-flexContainer"
                              onKeyDown={[Function]}
                              role="tablist"
                            >
                              <WithStyles(ForwardRef(Tab))
                                aria-controls="maintenance-panel"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                fullWidth={false}
                                id="maintenance-tab"
                                indicator={false}
                                key=".0"
                                label="Maintenance"
                                onChange={[Function]}
                                selected={false}
                                textColor="secondary"
                                to="/admin/maintenance"
                                value="maintenance"
                              >
                                <ForwardRef(Tab)
                                  aria-controls="maintenance-panel"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "fullWidth": "MuiTab-fullWidth",
                                      "labelIcon": "MuiTab-labelIcon",
                                      "root": "MuiTab-root",
                                      "selected": "Mui-selected",
                                      "textColorInherit": "MuiTab-textColorInherit",
                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                      "wrapped": "MuiTab-wrapped",
                                      "wrapper": "MuiTab-wrapper",
                                    }
                                  }
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  fullWidth={false}
                                  id="maintenance-tab"
                                  indicator={false}
                                  label="Maintenance"
                                  onChange={[Function]}
                                  selected={false}
                                  textColor="secondary"
                                  to="/admin/maintenance"
                                  value="maintenance"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="maintenance-panel"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorSecondary"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="maintenance-tab"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                    to="/admin/maintenance"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="maintenance-panel"
                                      aria-selected={false}
                                      className="MuiTab-root MuiTab-textColorSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      id="maintenance-tab"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      to="/admin/maintenance"
                                    >
                                      <Link
                                        aria-controls="maintenance-panel"
                                        aria-disabled={false}
                                        aria-selected={false}
                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                        id="maintenance-tab"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                        to="/admin/maintenance"
                                      >
                                        <LinkAnchor
                                          aria-controls="maintenance-panel"
                                          aria-disabled={false}
                                          aria-selected={false}
                                          className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                          href="/admin/maintenance"
                                          id="maintenance-tab"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <a
                                            aria-controls="maintenance-panel"
                                            aria-disabled={false}
                                            aria-selected={false}
                                            className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                            href="/admin/maintenance"
                                            id="maintenance-tab"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="tab"
                                            tabIndex={-1}
                                          >
                                            <span
                                              className="MuiTab-wrapper"
                                            >
                                              Maintenance
                                            </span>
                                            <WithStyles(memo)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Tab)>
                              </WithStyles(ForwardRef(Tab))>
                              <WithStyles(ForwardRef(Tab))
                                aria-controls="download-panel"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                fullWidth={false}
                                id="download-tab"
                                indicator={false}
                                key=".1"
                                label="Admin Download"
                                onChange={[Function]}
                                selected={true}
                                textColor="secondary"
                                to="/admin/download"
                                value="download"
                              >
                                <ForwardRef(Tab)
                                  aria-controls="download-panel"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "fullWidth": "MuiTab-fullWidth",
                                      "labelIcon": "MuiTab-labelIcon",
                                      "root": "MuiTab-root",
                                      "selected": "Mui-selected",
                                      "textColorInherit": "MuiTab-textColorInherit",
                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                      "wrapped": "MuiTab-wrapped",
                                      "wrapper": "MuiTab-wrapper",
                                    }
                                  }
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  fullWidth={false}
                                  id="download-tab"
                                  indicator={false}
                                  label="Admin Download"
                                  onChange={[Function]}
                                  selected={true}
                                  textColor="secondary"
                                  to="/admin/download"
                                  value="download"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="download-panel"
                                    aria-selected={true}
                                    className="MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="download-tab"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={0}
                                    to="/admin/download"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="download-panel"
                                      aria-selected={true}
                                      className="MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      id="download-tab"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      role="tab"
                                      tabIndex={0}
                                      to="/admin/download"
                                    >
                                      <Link
                                        aria-controls="download-panel"
                                        aria-disabled={false}
                                        aria-selected={true}
                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                        id="download-tab"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="tab"
                                        tabIndex={0}
                                        to="/admin/download"
                                      >
                                        <LinkAnchor
                                          aria-controls="download-panel"
                                          aria-disabled={false}
                                          aria-selected={true}
                                          className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                          href="/admin/download"
                                          id="download-tab"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="tab"
                                          tabIndex={0}
                                        >
                                          <a
                                            aria-controls="download-panel"
                                            aria-disabled={false}
                                            aria-selected={true}
                                            className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                            href="/admin/download"
                                            id="download-tab"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="tab"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiTab-wrapper"
                                            >
                                              Admin Download
                                            </span>
                                            <WithStyles(memo)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Tab)>
                              </WithStyles(ForwardRef(Tab))>
                            </div>
                            <WithStyles(ForwardRef(TabIndicator))
                              className="MuiTabs-indicator"
                              color="secondary"
                              orientation="horizontal"
                              style={
                                Object {
                                  "left": 0,
                                  "width": 0,
                                }
                              }
                            >
                              <ForwardRef(TabIndicator)
                                className="MuiTabs-indicator"
                                classes={
                                  Object {
                                    "colorPrimary": "PrivateTabIndicator-colorPrimary-22",
                                    "colorSecondary": "PrivateTabIndicator-colorSecondary-23",
                                    "root": "PrivateTabIndicator-root-21",
                                    "vertical": "PrivateTabIndicator-vertical-24",
                                  }
                                }
                                color="secondary"
                                orientation="horizontal"
                                style={
                                  Object {
                                    "left": 0,
                                    "width": 0,
                                  }
                                }
                              >
                                <span
                                  className="PrivateTabIndicator-root-21 PrivateTabIndicator-colorSecondary-23 MuiTabs-indicator"
                                  style={
                                    Object {
                                      "left": 0,
                                      "width": 0,
                                    }
                                  }
                                />
                              </ForwardRef(TabIndicator)>
                            </WithStyles(ForwardRef(TabIndicator))>
                          </div>
                        </div>
                      </ForwardRef(Tabs)>
                    </WithStyles(ForwardRef(Tabs))>
                    <Switch>
                      <Route
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/admin/download",
                            "url": "/admin/download",
                          }
                        }
                        exact={true}
                        key="datagateway-download"
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/admin/download",
                            "search": "",
                          }
                        }
                        path={
                          Array [
                            "/admin/download",
                          ]
                        }
                      >
                        <div
                          aria-labelledby="download-tab"
                          hidden={false}
                          id="download-panel"
                          role="tabpanel"
                        >
                          <PluginPlaceHolder
                            id="datagateway-download"
                          >
                            <div
                              id="datagateway-download"
                            >
                              <Preloader
                                fullScreen={false}
                                loading={true}
                              >
                                <div>
                                  <div
                                    className="makeStyles-container-27 makeStyles-container-30"
                                  >
                                    <div
                                      className="makeStyles-wrapper-26"
                                    >
                                      <div
                                        className="makeStyles-spinner-25 makeStyles-spinner-29"
                                      >
                                        <i
                                          style={
                                            Object {
                                              "animationDuration": "3s",
                                              "animationIterationCount": "infinite",
                                              "animationName": "rotate",
                                              "animationTimingFunction": "cubic-bezier(.09, 0, 0, .03)",
                                              "border": "solid 8px transparent",
                                              "borderBottom": "none",
                                              "borderColor": "#8C4799",
                                              "borderTopLeftRadius": 140,
                                              "borderTopRightRadius": 140,
                                              "boxSizing": "border-box",
                                              "display": "inline-block",
                                              "height": 70,
                                              "left": "50%",
                                              "marginLeft": -70,
                                              "marginTop": -70,
                                              "position": "absolute",
                                              "top": "50%",
                                              "transformOrigin": "50% 100% 0",
                                              "width": 140,
                                            }
                                          }
                                        />
                                        <i
                                          style={
                                            Object {
                                              "animationDuration": "3s",
                                              "animationIterationCount": "infinite",
                                              "animationName": "rotate",
                                              "animationTimingFunction": "cubic-bezier(.09, 0.3, 0.12, .03)",
                                              "border": "solid 8px transparent",
                                              "borderBottom": "none",
                                              "borderColor": "#1D4F91",
                                              "borderTopLeftRadius": 148,
                                              "borderTopRightRadius": 148,
                                              "boxSizing": "border-box",
                                              "display": "inline-block",
                                              "height": 79,
                                              "left": "50%",
                                              "marginLeft": -79,
                                              "marginTop": -79,
                                              "position": "absolute",
                                              "top": "50%",
                                              "transformOrigin": "50% 100% 0",
                                              "width": 158,
                                            }
                                          }
                                        />
                                        <i
                                          style={
                                            Object {
                                              "animationDuration": "3s",
                                              "animationIterationCount": "infinite",
                                              "animationName": "rotate",
                                              "animationTimingFunction": "cubic-bezier(.09, 0.6, 0.24, .03)",
                                              "border": "solid 8px transparent",
                                              "borderBottom": "none",
                                              "borderColor": "#C34613",
                                              "borderTopLeftRadius": 156,
                                              "borderTopRightRadius": 156,
                                              "boxSizing": "border-box",
                                              "display": "inline-block",
                                              "height": 88,
                                              "left": "50%",
                                              "marginLeft": -88,
                                              "marginTop": -88,
                                              "position": "absolute",
                                              "top": "50%",
                                              "transformOrigin": "50% 100% 0",
                                              "width": 176,
                                            }
                                          }
                                        />
                                        <i
                                          style={
                                            Object {
                                              "animationDuration": "3s",
                                              "animationIterationCount": "infinite",
                                              "animationName": "rotate",
                                              "animationTimingFunction": "cubic-bezier(.09, 0.8999999999999999, 0.36, .03)",
                                              "border": "solid 8px transparent",
                                              "borderBottom": "none",
                                              "borderColor": "#008275",
                                              "borderTopLeftRadius": 164,
                                              "borderTopRightRadius": 164,
                                              "boxSizing": "border-box",
                                              "display": "inline-block",
                                              "height": 97,
                                              "left": "50%",
                                              "marginLeft": -97,
                                              "marginTop": -97,
                                              "position": "absolute",
                                              "top": "50%",
                                              "transformOrigin": "50% 100% 0",
                                              "width": 194,
                                            }
                                          }
                                        />
                                        <i
                                          style={
                                            Object {
                                              "animationDuration": "3s",
                                              "animationIterationCount": "infinite",
                                              "animationName": "rotate",
                                              "animationTimingFunction": "cubic-bezier(.09, 1.2, 0.48, .03)",
                                              "border": "solid 8px transparent",
                                              "borderBottom": "none",
                                              "borderColor": "#63666A",
                                              "borderTopLeftRadius": 172,
                                              "borderTopRightRadius": 172,
                                              "boxSizing": "border-box",
                                              "display": "inline-block",
                                              "height": 106,
                                              "left": "50%",
                                              "marginLeft": -106,
                                              "marginTop": -106,
                                              "position": "absolute",
                                              "top": "50%",
                                              "transformOrigin": "50% 100% 0",
                                              "width": 212,
                                            }
                                          }
                                        />
                                      </div>
                                    </div>
                                    <div
                                      className="makeStyles-text-28"
                                    >
                                      Loading...
                                    </div>
                                  </div>
                                </div>
                              </Preloader>
                            </div>
                          </PluginPlaceHolder>
                        </div>
                      </Route>
                    </Switch>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </AdminPage>
          </WithStyles(AdminPage)>
        </Connect(WithStyles(AdminPage))>
      </Router>
    </MemoryRouter>
  </ThemeProvider>
</Provider>
`;

exports[`Admin page component should render maintenance page correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <ThemeProvider
    theme={
      Object {
        "breakpoints": Object {
          "between": [Function],
          "down": [Function],
          "keys": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
          "only": [Function],
          "up": [Function],
          "values": Object {
            "lg": 1280,
            "md": 960,
            "sm": 600,
            "xl": 1920,
            "xs": 0,
          },
          "width": [Function],
        },
        "colours": Object {
          "background": "#FAFAFA",
          "blue": "#003088",
          "chip": "#E0E0E0",
          "contrastGrey": "#717171",
          "darkGreen": "#3A7F3A",
          "darkOrange": "#C34F00",
          "footerLink": Object {
            "active": "#E58885",
            "default": "#FFFFFF",
          },
          "grey": "#727272",
          "homePage": Object {
            "blueButton": "#1E5DF8",
            "blueDescription": "#FFFFFF",
            "heading": "#333333",
          },
          "information": "#003088",
          "lightBlue": "#1E5DF8",
          "lightOrange": "#FF6900",
          "link": Object {
            "active": "#E94D36",
            "default": "#1E5DF8",
            "visited": "#BE2BBB",
          },
          "orange": "#C34F00",
          "paper": "#FFFFFF",
          "primary": "#003088",
          "red": "#AC1600",
          "secondary": "#003088",
          "tabsGrey": "#EEEEEE",
          "textSecondary": "rgba(0, 0, 0, 0.54)",
          "type": "default",
          "warning": "#FFA500",
        },
        "direction": "ltr",
        "drawerWidth": 220,
        "footerHeight": "20px",
        "footerPaddingBottom": "8px",
        "footerPaddingTop": "8px",
        "mainAppBarHeight": "64px",
        "mixins": Object {
          "gutters": [Function],
          "toolbar": Object {
            "@media (min-width:0px) and (orientation: landscape)": Object {
              "minHeight": 48,
            },
            "@media (min-width:600px)": Object {
              "minHeight": 64,
            },
            "minHeight": 56,
          },
        },
        "overrides": Object {
          "MuiBadge": Object {
            "colorPrimary": Object {
              "backgroundColor": "#C34F00",
              "color": "white",
            },
          },
          "MuiChip": Object {
            "root": Object {
              "backgroundColor": "#E0E0E0",
            },
          },
          "MuiFormHelperText": Object {
            "root": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
            },
          },
          "MuiFormLabel": Object {
            "asterisk": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
            },
            "root": Object {
              "&$error": Object {
                "color": "#AC1600",
              },
              "&$focused": Object {
                "color": "#003088",
              },
            },
          },
          "MuiInput": Object {
            "underline": Object {
              "&$error:after": Object {
                "borderBottomColor": "#AC1600",
              },
              "&:after": Object {
                "borderBottomColor": "#003088",
              },
            },
          },
          "MuiLink": Object {
            "button": Object {
              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
              "verticalAlign": "none",
            },
            "root": Object {
              "color": "#003088",
            },
          },
          "MuiOutlinedInput": Object {
            "input": Object {
              "&::placeholder": Object {
                "colour": "rgba(0, 0, 0, 0.54)",
                "opacity": 0.7,
              },
            },
            "root": Object {
              "&$error $notchedOutline": Object {
                "borderColor": "#AC1600",
              },
            },
          },
          "MuiPickersCalendarHeader": Object {
            "dayLabel": Object {
              "color": "#727272",
            },
          },
          "MuiPickersDay": Object {
            "current": Object {
              "color": "#003088",
            },
            "dayDisabled": Object {
              "color": "#727272",
            },
          },
          "MuiPickersMonth": Object {
            "monthDisabled": Object {
              "color": "#727272",
            },
            "monthSelected": Object {
              "color": "#003088",
            },
            "root": Object {
              "&:active": Object {
                "color": "#003088",
              },
              "&:focus": Object {
                "color": "#003088",
              },
            },
          },
          "MuiPickersToolbar": Object {
            "toolbar": Object {
              "backgroundColor": "#003088",
            },
          },
          "MuiPickersYear": Object {
            "root": Object {
              "&:active": Object {
                "color": "#003088",
              },
              "&:focus": Object {
                "color": "#003088",
              },
            },
            "yearDisabled": Object {
              "color": "#727272",
            },
            "yearSelected": Object {
              "color": "#003088",
            },
          },
          "MuiTabs": Object {
            "indicator": Object {
              "color": "#003088",
              "textDecoration": "underline",
            },
          },
        },
        "palette": Object {
          "action": Object {
            "activatedOpacity": 0.12,
            "active": "rgba(0, 0, 0, 0.54)",
            "disabled": "rgba(0, 0, 0, 0.26)",
            "disabledBackground": "rgba(0, 0, 0, 0.12)",
            "disabledOpacity": 0.38,
            "focus": "rgba(0, 0, 0, 0.12)",
            "focusOpacity": 0.12,
            "hover": "rgba(0, 0, 0, 0.04)",
            "hoverOpacity": 0.04,
            "selected": "rgba(0, 0, 0, 0.08)",
            "selectedOpacity": 0.08,
          },
          "augmentColor": [Function],
          "background": Object {
            "default": "#FAFAFA",
            "paper": "#FFFFFF",
          },
          "common": Object {
            "black": "#000",
            "white": "#fff",
          },
          "contrastThreshold": 3,
          "divider": "rgba(0, 0, 0, 0.12)",
          "error": Object {
            "contrastText": "#fff",
            "dark": "#d32f2f",
            "light": "#e57373",
            "main": "#f44336",
          },
          "getContrastText": [Function],
          "grey": Object {
            "100": "#f5f5f5",
            "200": "#eeeeee",
            "300": "#e0e0e0",
            "400": "#bdbdbd",
            "50": "#fafafa",
            "500": "#9e9e9e",
            "600": "#757575",
            "700": "#616161",
            "800": "#424242",
            "900": "#212121",
            "A100": "#d5d5d5",
            "A200": "#aaaaaa",
            "A400": "#303030",
            "A700": "#616161",
          },
          "info": Object {
            "contrastText": "#fff",
            "dark": "#1976d2",
            "light": "#64b5f6",
            "main": "#2196f3",
          },
          "primary": Object {
            "contrastText": "#fff",
            "dark": "rgb(0, 33, 95)",
            "light": "rgb(51, 89, 159)",
            "main": "#003088",
          },
          "secondary": Object {
            "contrastText": "#fff",
            "dark": "rgb(0, 33, 95)",
            "light": "rgb(51, 89, 159)",
            "main": "#003088",
          },
          "success": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#388e3c",
            "light": "#81c784",
            "main": "#4caf50",
          },
          "text": Object {
            "disabled": "rgba(0, 0, 0, 0.38)",
            "hint": "rgba(0, 0, 0, 0.38)",
            "primary": "rgba(0, 0, 0, 0.87)",
            "secondary": "rgba(0, 0, 0, 0.54)",
          },
          "tonalOffset": 0.2,
          "type": "light",
          "warning": Object {
            "contrastText": "rgba(0, 0, 0, 0.87)",
            "dark": "#f57c00",
            "light": "#ffb74d",
            "main": "#ff9800",
          },
        },
        "props": Object {},
        "shadows": Array [
          "none",
          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
        ],
        "shape": Object {
          "borderRadius": 4,
        },
        "spacing": [Function],
        "transitions": Object {
          "create": [Function],
          "duration": Object {
            "complex": 375,
            "enteringScreen": 225,
            "leavingScreen": 195,
            "short": 250,
            "shorter": 200,
            "shortest": 150,
            "standard": 300,
          },
          "easing": Object {
            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
          },
          "getAutoHeightDuration": [Function],
        },
        "typography": Object {
          "body1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.5,
          },
          "body2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 400,
            "letterSpacing": "0.01071em",
            "lineHeight": 1.43,
          },
          "button": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.02857em",
            "lineHeight": 1.75,
            "textTransform": "none",
          },
          "caption": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.03333em",
            "lineHeight": 1.66,
          },
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": 14,
          "fontWeightBold": 700,
          "fontWeightLight": 300,
          "fontWeightMedium": 500,
          "fontWeightRegular": 400,
          "h1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "6rem",
            "fontWeight": 300,
            "letterSpacing": "-0.01562em",
            "lineHeight": 1.167,
          },
          "h2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3.75rem",
            "fontWeight": 300,
            "letterSpacing": "-0.00833em",
            "lineHeight": 1.2,
          },
          "h3": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "3rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.167,
          },
          "h4": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "2.125rem",
            "fontWeight": 400,
            "letterSpacing": "0.00735em",
            "lineHeight": 1.235,
          },
          "h5": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.5rem",
            "fontWeight": 400,
            "letterSpacing": "0em",
            "lineHeight": 1.334,
          },
          "h6": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1.25rem",
            "fontWeight": 500,
            "letterSpacing": "0.0075em",
            "lineHeight": 1.6,
          },
          "htmlFontSize": 16,
          "overline": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.75rem",
            "fontWeight": 400,
            "letterSpacing": "0.08333em",
            "lineHeight": 2.66,
            "textTransform": "uppercase",
          },
          "pxToRem": [Function],
          "round": [Function],
          "subtitle1": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "1rem",
            "fontWeight": 400,
            "letterSpacing": "0.00938em",
            "lineHeight": 1.75,
          },
          "subtitle2": Object {
            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
            "fontSize": "0.875rem",
            "fontWeight": 500,
            "letterSpacing": "0.00714em",
            "lineHeight": 1.57,
          },
        },
        "zIndex": Object {
          "appBar": 1100,
          "drawer": 1200,
          "mobileStepper": 1000,
          "modal": 1300,
          "snackbar": 1400,
          "speedDial": 1050,
          "tooltip": 1500,
        },
        Symbol(mui.nested): false,
      }
    }
  >
    <MemoryRouter
      initialEntries={
        Array [
          Object {
            "key": "testKey",
            "pathname": "/admin/maintenance",
          },
        ]
      }
    >
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "canGo": [Function],
            "createHref": [Function],
            "entries": Array [
              Object {
                "hash": "",
                "key": "testKey",
                "pathname": "/admin/maintenance",
                "search": "",
              },
            ],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "index": 0,
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "key": "testKey",
              "pathname": "/admin/maintenance",
              "search": "",
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Connect(WithStyles(AdminPage))>
          <WithStyles(AdminPage)
            adminPageDefaultTab="download"
            dispatch={[Function]}
            plugins={Array []}
          >
            <AdminPage
              adminPageDefaultTab="download"
              classes={
                Object {
                  "form": "AdminPage-form-4",
                  "paper": "AdminPage-paper-3",
                  "root": "AdminPage-root-1",
                  "textArea": "AdminPage-textArea-5",
                  "titleText": "AdminPage-titleText-2",
                }
              }
              dispatch={[Function]}
              plugins={Array []}
            >
              <WithStyles(ForwardRef(Paper))
                className="AdminPage-root-1"
                id="admin-page"
              >
                <ForwardRef(Paper)
                  className="AdminPage-root-1"
                  classes={
                    Object {
                      "elevation0": "MuiPaper-elevation0",
                      "elevation1": "MuiPaper-elevation1",
                      "elevation10": "MuiPaper-elevation10",
                      "elevation11": "MuiPaper-elevation11",
                      "elevation12": "MuiPaper-elevation12",
                      "elevation13": "MuiPaper-elevation13",
                      "elevation14": "MuiPaper-elevation14",
                      "elevation15": "MuiPaper-elevation15",
                      "elevation16": "MuiPaper-elevation16",
                      "elevation17": "MuiPaper-elevation17",
                      "elevation18": "MuiPaper-elevation18",
                      "elevation19": "MuiPaper-elevation19",
                      "elevation2": "MuiPaper-elevation2",
                      "elevation20": "MuiPaper-elevation20",
                      "elevation21": "MuiPaper-elevation21",
                      "elevation22": "MuiPaper-elevation22",
                      "elevation23": "MuiPaper-elevation23",
                      "elevation24": "MuiPaper-elevation24",
                      "elevation3": "MuiPaper-elevation3",
                      "elevation4": "MuiPaper-elevation4",
                      "elevation5": "MuiPaper-elevation5",
                      "elevation6": "MuiPaper-elevation6",
                      "elevation7": "MuiPaper-elevation7",
                      "elevation8": "MuiPaper-elevation8",
                      "elevation9": "MuiPaper-elevation9",
                      "outlined": "MuiPaper-outlined",
                      "root": "MuiPaper-root",
                      "rounded": "MuiPaper-rounded",
                    }
                  }
                  id="admin-page"
                >
                  <div
                    className="MuiPaper-root AdminPage-root-1 MuiPaper-elevation1 MuiPaper-rounded"
                    id="admin-page"
                  >
                    <WithStyles(ForwardRef(Typography))
                      className="AdminPage-titleText-2"
                      variant="h3"
                    >
                      <ForwardRef(Typography)
                        className="AdminPage-titleText-2"
                        classes={
                          Object {
                            "alignCenter": "MuiTypography-alignCenter",
                            "alignJustify": "MuiTypography-alignJustify",
                            "alignLeft": "MuiTypography-alignLeft",
                            "alignRight": "MuiTypography-alignRight",
                            "body1": "MuiTypography-body1",
                            "body2": "MuiTypography-body2",
                            "button": "MuiTypography-button",
                            "caption": "MuiTypography-caption",
                            "colorError": "MuiTypography-colorError",
                            "colorInherit": "MuiTypography-colorInherit",
                            "colorPrimary": "MuiTypography-colorPrimary",
                            "colorSecondary": "MuiTypography-colorSecondary",
                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                            "displayBlock": "MuiTypography-displayBlock",
                            "displayInline": "MuiTypography-displayInline",
                            "gutterBottom": "MuiTypography-gutterBottom",
                            "h1": "MuiTypography-h1",
                            "h2": "MuiTypography-h2",
                            "h3": "MuiTypography-h3",
                            "h4": "MuiTypography-h4",
                            "h5": "MuiTypography-h5",
                            "h6": "MuiTypography-h6",
                            "noWrap": "MuiTypography-noWrap",
                            "overline": "MuiTypography-overline",
                            "paragraph": "MuiTypography-paragraph",
                            "root": "MuiTypography-root",
                            "srOnly": "MuiTypography-srOnly",
                            "subtitle1": "MuiTypography-subtitle1",
                            "subtitle2": "MuiTypography-subtitle2",
                          }
                        }
                        variant="h3"
                      >
                        <h3
                          className="MuiTypography-root AdminPage-titleText-2 MuiTypography-h3"
                        >
                          admin.title
                        </h3>
                      </ForwardRef(Typography)>
                    </WithStyles(ForwardRef(Typography))>
                    <WithStyles(ForwardRef(Tabs))
                      onChange={[Function]}
                      textColor="secondary"
                      value="maintenance"
                    >
                      <ForwardRef(Tabs)
                        classes={
                          Object {
                            "centered": "MuiTabs-centered",
                            "fixed": "MuiTabs-fixed",
                            "flexContainer": "MuiTabs-flexContainer",
                            "flexContainerVertical": "MuiTabs-flexContainerVertical",
                            "indicator": "MuiTabs-indicator",
                            "root": "MuiTabs-root",
                            "scrollButtons": "MuiTabs-scrollButtons",
                            "scrollButtonsDesktop": "MuiTabs-scrollButtonsDesktop",
                            "scrollable": "MuiTabs-scrollable",
                            "scroller": "MuiTabs-scroller",
                            "vertical": "MuiTabs-vertical",
                          }
                        }
                        onChange={[Function]}
                        textColor="secondary"
                        value="maintenance"
                      >
                        <div
                          className="MuiTabs-root"
                        >
                          <div
                            className="MuiTabs-scroller MuiTabs-fixed"
                            onScroll={[Function]}
                            style={
                              Object {
                                "marginBottom": null,
                                "overflow": "hidden",
                              }
                            }
                          >
                            <div
                              className="MuiTabs-flexContainer"
                              onKeyDown={[Function]}
                              role="tablist"
                            >
                              <WithStyles(ForwardRef(Tab))
                                aria-controls="maintenance-panel"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                fullWidth={false}
                                id="maintenance-tab"
                                indicator={false}
                                key=".0"
                                label="Maintenance"
                                onChange={[Function]}
                                selected={true}
                                textColor="secondary"
                                to="/admin/maintenance"
                                value="maintenance"
                              >
                                <ForwardRef(Tab)
                                  aria-controls="maintenance-panel"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "fullWidth": "MuiTab-fullWidth",
                                      "labelIcon": "MuiTab-labelIcon",
                                      "root": "MuiTab-root",
                                      "selected": "Mui-selected",
                                      "textColorInherit": "MuiTab-textColorInherit",
                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                      "wrapped": "MuiTab-wrapped",
                                      "wrapper": "MuiTab-wrapper",
                                    }
                                  }
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  fullWidth={false}
                                  id="maintenance-tab"
                                  indicator={false}
                                  label="Maintenance"
                                  onChange={[Function]}
                                  selected={true}
                                  textColor="secondary"
                                  to="/admin/maintenance"
                                  value="maintenance"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="maintenance-panel"
                                    aria-selected={true}
                                    className="MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="maintenance-tab"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={0}
                                    to="/admin/maintenance"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="maintenance-panel"
                                      aria-selected={true}
                                      className="MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      id="maintenance-tab"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      role="tab"
                                      tabIndex={0}
                                      to="/admin/maintenance"
                                    >
                                      <Link
                                        aria-controls="maintenance-panel"
                                        aria-disabled={false}
                                        aria-selected={true}
                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                        id="maintenance-tab"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="tab"
                                        tabIndex={0}
                                        to="/admin/maintenance"
                                      >
                                        <LinkAnchor
                                          aria-controls="maintenance-panel"
                                          aria-disabled={false}
                                          aria-selected={true}
                                          className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                          href="/admin/maintenance"
                                          id="maintenance-tab"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="tab"
                                          tabIndex={0}
                                        >
                                          <a
                                            aria-controls="maintenance-panel"
                                            aria-disabled={false}
                                            aria-selected={true}
                                            className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary Mui-selected"
                                            href="/admin/maintenance"
                                            id="maintenance-tab"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="tab"
                                            tabIndex={0}
                                          >
                                            <span
                                              className="MuiTab-wrapper"
                                            >
                                              Maintenance
                                            </span>
                                            <WithStyles(memo)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Tab)>
                              </WithStyles(ForwardRef(Tab))>
                              <WithStyles(ForwardRef(Tab))
                                aria-controls="download-panel"
                                component={
                                  Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "displayName": "Link",
                                    "propTypes": Object {
                                      "innerRef": [Function],
                                      "onClick": [Function],
                                      "replace": [Function],
                                      "target": [Function],
                                      "to": [Function],
                                    },
                                    "render": [Function],
                                  }
                                }
                                fullWidth={false}
                                id="download-tab"
                                indicator={false}
                                key=".1"
                                label="Admin Download"
                                onChange={[Function]}
                                selected={false}
                                textColor="secondary"
                                to="/admin/download"
                                value="download"
                              >
                                <ForwardRef(Tab)
                                  aria-controls="download-panel"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "fullWidth": "MuiTab-fullWidth",
                                      "labelIcon": "MuiTab-labelIcon",
                                      "root": "MuiTab-root",
                                      "selected": "Mui-selected",
                                      "textColorInherit": "MuiTab-textColorInherit",
                                      "textColorPrimary": "MuiTab-textColorPrimary",
                                      "textColorSecondary": "MuiTab-textColorSecondary",
                                      "wrapped": "MuiTab-wrapped",
                                      "wrapper": "MuiTab-wrapper",
                                    }
                                  }
                                  component={
                                    Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "displayName": "Link",
                                      "propTypes": Object {
                                        "innerRef": [Function],
                                        "onClick": [Function],
                                        "replace": [Function],
                                        "target": [Function],
                                        "to": [Function],
                                      },
                                      "render": [Function],
                                    }
                                  }
                                  fullWidth={false}
                                  id="download-tab"
                                  indicator={false}
                                  label="Admin Download"
                                  onChange={[Function]}
                                  selected={false}
                                  textColor="secondary"
                                  to="/admin/download"
                                  value="download"
                                >
                                  <WithStyles(ForwardRef(ButtonBase))
                                    aria-controls="download-panel"
                                    aria-selected={false}
                                    className="MuiTab-root MuiTab-textColorSecondary"
                                    component={
                                      Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "displayName": "Link",
                                        "propTypes": Object {
                                          "innerRef": [Function],
                                          "onClick": [Function],
                                          "replace": [Function],
                                          "target": [Function],
                                          "to": [Function],
                                        },
                                        "render": [Function],
                                      }
                                    }
                                    disabled={false}
                                    focusRipple={true}
                                    id="download-tab"
                                    onClick={[Function]}
                                    onFocus={[Function]}
                                    role="tab"
                                    tabIndex={-1}
                                    to="/admin/download"
                                  >
                                    <ForwardRef(ButtonBase)
                                      aria-controls="download-panel"
                                      aria-selected={false}
                                      className="MuiTab-root MuiTab-textColorSecondary"
                                      classes={
                                        Object {
                                          "disabled": "Mui-disabled",
                                          "focusVisible": "Mui-focusVisible",
                                          "root": "MuiButtonBase-root",
                                        }
                                      }
                                      component={
                                        Object {
                                          "$$typeof": Symbol(react.forward_ref),
                                          "displayName": "Link",
                                          "propTypes": Object {
                                            "innerRef": [Function],
                                            "onClick": [Function],
                                            "replace": [Function],
                                            "target": [Function],
                                            "to": [Function],
                                          },
                                          "render": [Function],
                                        }
                                      }
                                      disabled={false}
                                      focusRipple={true}
                                      id="download-tab"
                                      onClick={[Function]}
                                      onFocus={[Function]}
                                      role="tab"
                                      tabIndex={-1}
                                      to="/admin/download"
                                    >
                                      <Link
                                        aria-controls="download-panel"
                                        aria-disabled={false}
                                        aria-selected={false}
                                        className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                        id="download-tab"
                                        onBlur={[Function]}
                                        onClick={[Function]}
                                        onDragLeave={[Function]}
                                        onFocus={[Function]}
                                        onKeyDown={[Function]}
                                        onKeyUp={[Function]}
                                        onMouseDown={[Function]}
                                        onMouseLeave={[Function]}
                                        onMouseUp={[Function]}
                                        onTouchEnd={[Function]}
                                        onTouchMove={[Function]}
                                        onTouchStart={[Function]}
                                        role="tab"
                                        tabIndex={-1}
                                        to="/admin/download"
                                      >
                                        <LinkAnchor
                                          aria-controls="download-panel"
                                          aria-disabled={false}
                                          aria-selected={false}
                                          className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                          href="/admin/download"
                                          id="download-tab"
                                          navigate={[Function]}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onDragLeave={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          onKeyUp={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseLeave={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchMove={[Function]}
                                          onTouchStart={[Function]}
                                          role="tab"
                                          tabIndex={-1}
                                        >
                                          <a
                                            aria-controls="download-panel"
                                            aria-disabled={false}
                                            aria-selected={false}
                                            className="MuiButtonBase-root MuiTab-root MuiTab-textColorSecondary"
                                            href="/admin/download"
                                            id="download-tab"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            role="tab"
                                            tabIndex={-1}
                                          >
                                            <span
                                              className="MuiTab-wrapper"
                                            >
                                              Admin Download
                                            </span>
                                            <WithStyles(memo)
                                              center={false}
                                            >
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                                classes={
                                                  Object {
                                                    "child": "MuiTouchRipple-child",
                                                    "childLeaving": "MuiTouchRipple-childLeaving",
                                                    "childPulsate": "MuiTouchRipple-childPulsate",
                                                    "ripple": "MuiTouchRipple-ripple",
                                                    "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                    "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                    "root": "MuiTouchRipple-root",
                                                  }
                                                }
                                              >
                                                <span
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <TransitionGroup
                                                    childFactory={[Function]}
                                                    component={null}
                                                    exit={true}
                                                  />
                                                </span>
                                              </ForwardRef(TouchRipple)>
                                            </WithStyles(memo)>
                                          </a>
                                        </LinkAnchor>
                                      </Link>
                                    </ForwardRef(ButtonBase)>
                                  </WithStyles(ForwardRef(ButtonBase))>
                                </ForwardRef(Tab)>
                              </WithStyles(ForwardRef(Tab))>
                            </div>
                            <WithStyles(ForwardRef(TabIndicator))
                              className="MuiTabs-indicator"
                              color="secondary"
                              orientation="horizontal"
                              style={
                                Object {
                                  "left": 0,
                                  "width": 0,
                                }
                              }
                            >
                              <ForwardRef(TabIndicator)
                                className="MuiTabs-indicator"
                                classes={
                                  Object {
                                    "colorPrimary": "PrivateTabIndicator-colorPrimary-7",
                                    "colorSecondary": "PrivateTabIndicator-colorSecondary-8",
                                    "root": "PrivateTabIndicator-root-6",
                                    "vertical": "PrivateTabIndicator-vertical-9",
                                  }
                                }
                                color="secondary"
                                orientation="horizontal"
                                style={
                                  Object {
                                    "left": 0,
                                    "width": 0,
                                  }
                                }
                              >
                                <span
                                  className="PrivateTabIndicator-root-6 PrivateTabIndicator-colorSecondary-8 MuiTabs-indicator"
                                  style={
                                    Object {
                                      "left": 0,
                                      "width": 0,
                                    }
                                  }
                                />
                              </ForwardRef(TabIndicator)>
                            </WithStyles(ForwardRef(TabIndicator))>
                          </div>
                        </div>
                      </ForwardRef(Tabs)>
                    </WithStyles(ForwardRef(Tabs))>
                    <Switch>
                      <Route
                        computedMatch={
                          Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/admin/maintenance",
                            "url": "/admin/maintenance",
                          }
                        }
                        exact={true}
                        location={
                          Object {
                            "hash": "",
                            "key": "testKey",
                            "pathname": "/admin/maintenance",
                            "search": "",
                          }
                        }
                        path="/admin/maintenance"
                      >
                        <div
                          aria-labelledby="maintenance-tab"
                          hidden={false}
                          id="maintenance-panel"
                          role="tabpanel"
                        >
                          <Connect(WithStyles(MaintenancePage))>
                            <WithStyles(MaintenancePage)
                              maintenance={
                                Object {
                                  "message": "",
                                  "show": false,
                                }
                              }
                              scheduledMaintenance={
                                Object {
                                  "message": "",
                                  "show": false,
                                }
                              }
                              setMaintenanceState={[Function]}
                              setScheduledMaintenanceState={[Function]}
                            >
                              <MaintenancePage
                                classes={
                                  Object {
                                    "paper": "MaintenancePage-paper-10",
                                    "textArea": "MaintenancePage-textArea-11",
                                  }
                                }
                                maintenance={
                                  Object {
                                    "message": "",
                                    "show": false,
                                  }
                                }
                                scheduledMaintenance={
                                  Object {
                                    "message": "",
                                    "show": false,
                                  }
                                }
                                setMaintenanceState={[Function]}
                                setScheduledMaintenanceState={[Function]}
                              >
                                <div
                                  id="maintenance-page"
                                >
                                  <WithStyles(ForwardRef(Paper))
                                    className="MaintenancePage-paper-10"
                                  >
                                    <ForwardRef(Paper)
                                      className="MaintenancePage-paper-10"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiPaper-root MaintenancePage-paper-10 MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          variant="h4"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="h4"
                                          >
                                            <h4
                                              className="MuiTypography-root MuiTypography-h4"
                                            >
                                              admin.scheduled-maintenance-title
                                            </h4>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(TextareaAutosize)
                                          aria-label="admin.scheduled-maintenance-message-arialabel"
                                          className="MaintenancePage-textArea-11"
                                          onChange={[Function]}
                                          placeholder="admin.message-placeholder"
                                          rows={7}
                                          value=""
                                        >
                                          <textarea
                                            aria-label="admin.scheduled-maintenance-message-arialabel"
                                            className="MaintenancePage-textArea-11"
                                            onChange={[Function]}
                                            placeholder="admin.message-placeholder"
                                            rows={7}
                                            style={
                                              Object {
                                                "height": -4,
                                                "overflow": "hidden",
                                              }
                                            }
                                            value=""
                                          />
                                          <textarea
                                            aria-hidden={true}
                                            className="MaintenancePage-textArea-11"
                                            readOnly={true}
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "top": 0,
                                                "transform": "translateZ(0)",
                                                "visibility": "hidden",
                                              }
                                            }
                                            tabIndex={-1}
                                          />
                                        </ForwardRef(TextareaAutosize)>
                                        <div
                                          style={
                                            Object {
                                              "display": "row",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormControlLabel))
                                            control={
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="secondary"
                                                inputProps={
                                                  Object {
                                                    "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                  }
                                                }
                                                onChange={[Function]}
                                              />
                                            }
                                            label="admin.display-checkbox"
                                            labelPlacement="end"
                                            style={
                                              Object {
                                                "float": "left",
                                              }
                                            }
                                            value={false}
                                          >
                                            <ForwardRef(FormControlLabel)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "label": "MuiFormControlLabel-label",
                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                  "root": "MuiFormControlLabel-root",
                                                }
                                              }
                                              control={
                                                <WithStyles(ForwardRef(Checkbox))
                                                  checked={false}
                                                  color="secondary"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                    }
                                                  }
                                                  onChange={[Function]}
                                                />
                                              }
                                              label="admin.display-checkbox"
                                              labelPlacement="end"
                                              style={
                                                Object {
                                                  "float": "left",
                                                }
                                              }
                                              value={false}
                                            >
                                              <label
                                                className="MuiFormControlLabel-root"
                                                style={
                                                  Object {
                                                    "float": "left",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(Checkbox))
                                                  checked={false}
                                                  color="secondary"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                    }
                                                  }
                                                  onChange={[Function]}
                                                  value={false}
                                                >
                                                  <ForwardRef(Checkbox)
                                                    checked={false}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "indeterminate": "MuiCheckbox-indeterminate",
                                                        "root": "MuiCheckbox-root",
                                                      }
                                                    }
                                                    color="secondary"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                      }
                                                    }
                                                    onChange={[Function]}
                                                    value={false}
                                                  >
                                                    <WithStyles(ForwardRef(SwitchBase))
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "Mui-checked",
                                                          "disabled": "Mui-disabled",
                                                          "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                        }
                                                      }
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                      value={false}
                                                    >
                                                      <ForwardRef(SwitchBase)
                                                        checked={false}
                                                        checkedIcon={<Memo />}
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateSwitchBase-checked-13 Mui-checked",
                                                            "disabled": "PrivateSwitchBase-disabled-14 Mui-disabled",
                                                            "input": "PrivateSwitchBase-input-15",
                                                            "root": "PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                          }
                                                        }
                                                        color="secondary"
                                                        icon={<Memo />}
                                                        inputProps={
                                                          Object {
                                                            "aria-label": "admin.scheduled-maintenance-checkbox-arialabel",
                                                            "data-indeterminate": false,
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                        value={false}
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          className="PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                          color="secondary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <ForwardRef(IconButton)
                                                            className="PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="secondary"
                                                            component="span"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              tabIndex={null}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="span"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <input
                                                                      aria-label="admin.scheduled-maintenance-checkbox-arialabel"
                                                                      checked={false}
                                                                      className="PrivateSwitchBase-input-15"
                                                                      data-indeterminate={false}
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                      value={false}
                                                                    />
                                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </span>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </ForwardRef(SwitchBase)>
                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                  </ForwardRef(Checkbox)>
                                                </WithStyles(ForwardRef(Checkbox))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiFormControlLabel-label"
                                                  component="span"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiFormControlLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                    >
                                                      admin.display-checkbox
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </label>
                                            </ForwardRef(FormControlLabel)>
                                          </WithStyles(ForwardRef(FormControlLabel))>
                                          <WithStyles(ForwardRef(Button))
                                            color="primary"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              color="primary"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "float": "right",
                                                }
                                              }
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "float": "right",
                                                  }
                                                }
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "float": "right",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "float": "right",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        color="inherit"
                                                        noWrap={true}
                                                        style={
                                                          Object {
                                                            "marginTop": 3,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          color="inherit"
                                                          noWrap={true}
                                                          style={
                                                            Object {
                                                              "marginTop": 3,
                                                            }
                                                          }
                                                        >
                                                          <p
                                                            className="MuiTypography-root MuiTypography-body1 MuiTypography-colorInherit MuiTypography-noWrap"
                                                            style={
                                                              Object {
                                                                "marginTop": 3,
                                                              }
                                                            }
                                                          >
                                                            admin.save-button
                                                          </p>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </div>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                  <WithStyles(ForwardRef(Paper))
                                    className="MaintenancePage-paper-10"
                                  >
                                    <ForwardRef(Paper)
                                      className="MaintenancePage-paper-10"
                                      classes={
                                        Object {
                                          "elevation0": "MuiPaper-elevation0",
                                          "elevation1": "MuiPaper-elevation1",
                                          "elevation10": "MuiPaper-elevation10",
                                          "elevation11": "MuiPaper-elevation11",
                                          "elevation12": "MuiPaper-elevation12",
                                          "elevation13": "MuiPaper-elevation13",
                                          "elevation14": "MuiPaper-elevation14",
                                          "elevation15": "MuiPaper-elevation15",
                                          "elevation16": "MuiPaper-elevation16",
                                          "elevation17": "MuiPaper-elevation17",
                                          "elevation18": "MuiPaper-elevation18",
                                          "elevation19": "MuiPaper-elevation19",
                                          "elevation2": "MuiPaper-elevation2",
                                          "elevation20": "MuiPaper-elevation20",
                                          "elevation21": "MuiPaper-elevation21",
                                          "elevation22": "MuiPaper-elevation22",
                                          "elevation23": "MuiPaper-elevation23",
                                          "elevation24": "MuiPaper-elevation24",
                                          "elevation3": "MuiPaper-elevation3",
                                          "elevation4": "MuiPaper-elevation4",
                                          "elevation5": "MuiPaper-elevation5",
                                          "elevation6": "MuiPaper-elevation6",
                                          "elevation7": "MuiPaper-elevation7",
                                          "elevation8": "MuiPaper-elevation8",
                                          "elevation9": "MuiPaper-elevation9",
                                          "outlined": "MuiPaper-outlined",
                                          "root": "MuiPaper-root",
                                          "rounded": "MuiPaper-rounded",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiPaper-root MaintenancePage-paper-10 MuiPaper-elevation1 MuiPaper-rounded"
                                      >
                                        <WithStyles(ForwardRef(Typography))
                                          variant="h4"
                                        >
                                          <ForwardRef(Typography)
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            variant="h4"
                                          >
                                            <h4
                                              className="MuiTypography-root MuiTypography-h4"
                                            >
                                              admin.maintenance-title
                                            </h4>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(TextareaAutosize)
                                          aria-label="admin.maintenance-message-arialabel"
                                          className="MaintenancePage-textArea-11"
                                          onChange={[Function]}
                                          placeholder="admin.message-placeholder"
                                          rows={7}
                                          value=""
                                        >
                                          <textarea
                                            aria-label="admin.maintenance-message-arialabel"
                                            className="MaintenancePage-textArea-11"
                                            onChange={[Function]}
                                            placeholder="admin.message-placeholder"
                                            rows={7}
                                            style={
                                              Object {
                                                "height": -4,
                                                "overflow": "hidden",
                                              }
                                            }
                                            value=""
                                          />
                                          <textarea
                                            aria-hidden={true}
                                            className="MaintenancePage-textArea-11"
                                            readOnly={true}
                                            style={
                                              Object {
                                                "height": 0,
                                                "left": 0,
                                                "overflow": "hidden",
                                                "position": "absolute",
                                                "top": 0,
                                                "transform": "translateZ(0)",
                                                "visibility": "hidden",
                                              }
                                            }
                                            tabIndex={-1}
                                          />
                                        </ForwardRef(TextareaAutosize)>
                                        <div
                                          style={
                                            Object {
                                              "display": "row",
                                            }
                                          }
                                        >
                                          <WithStyles(ForwardRef(FormControlLabel))
                                            control={
                                              <WithStyles(ForwardRef(Checkbox))
                                                checked={false}
                                                color="secondary"
                                                inputProps={
                                                  Object {
                                                    "aria-label": "admin.maintenance-checkbox-arialabel",
                                                  }
                                                }
                                                onChange={[Function]}
                                              />
                                            }
                                            label="admin.display-checkbox"
                                            labelPlacement="end"
                                            style={
                                              Object {
                                                "float": "left",
                                              }
                                            }
                                            value={false}
                                          >
                                            <ForwardRef(FormControlLabel)
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "label": "MuiFormControlLabel-label",
                                                  "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                                  "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                                  "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                                  "root": "MuiFormControlLabel-root",
                                                }
                                              }
                                              control={
                                                <WithStyles(ForwardRef(Checkbox))
                                                  checked={false}
                                                  color="secondary"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "admin.maintenance-checkbox-arialabel",
                                                    }
                                                  }
                                                  onChange={[Function]}
                                                />
                                              }
                                              label="admin.display-checkbox"
                                              labelPlacement="end"
                                              style={
                                                Object {
                                                  "float": "left",
                                                }
                                              }
                                              value={false}
                                            >
                                              <label
                                                className="MuiFormControlLabel-root"
                                                style={
                                                  Object {
                                                    "float": "left",
                                                  }
                                                }
                                              >
                                                <WithStyles(ForwardRef(Checkbox))
                                                  checked={false}
                                                  color="secondary"
                                                  inputProps={
                                                    Object {
                                                      "aria-label": "admin.maintenance-checkbox-arialabel",
                                                    }
                                                  }
                                                  onChange={[Function]}
                                                  value={false}
                                                >
                                                  <ForwardRef(Checkbox)
                                                    checked={false}
                                                    classes={
                                                      Object {
                                                        "checked": "Mui-checked",
                                                        "colorPrimary": "MuiCheckbox-colorPrimary",
                                                        "colorSecondary": "MuiCheckbox-colorSecondary",
                                                        "disabled": "Mui-disabled",
                                                        "indeterminate": "MuiCheckbox-indeterminate",
                                                        "root": "MuiCheckbox-root",
                                                      }
                                                    }
                                                    color="secondary"
                                                    inputProps={
                                                      Object {
                                                        "aria-label": "admin.maintenance-checkbox-arialabel",
                                                      }
                                                    }
                                                    onChange={[Function]}
                                                    value={false}
                                                  >
                                                    <WithStyles(ForwardRef(SwitchBase))
                                                      checked={false}
                                                      checkedIcon={<Memo />}
                                                      classes={
                                                        Object {
                                                          "checked": "Mui-checked",
                                                          "disabled": "Mui-disabled",
                                                          "root": "MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                        }
                                                      }
                                                      color="secondary"
                                                      icon={<Memo />}
                                                      inputProps={
                                                        Object {
                                                          "aria-label": "admin.maintenance-checkbox-arialabel",
                                                          "data-indeterminate": false,
                                                        }
                                                      }
                                                      onChange={[Function]}
                                                      type="checkbox"
                                                      value={false}
                                                    >
                                                      <ForwardRef(SwitchBase)
                                                        checked={false}
                                                        checkedIcon={<Memo />}
                                                        classes={
                                                          Object {
                                                            "checked": "PrivateSwitchBase-checked-13 Mui-checked",
                                                            "disabled": "PrivateSwitchBase-disabled-14 Mui-disabled",
                                                            "input": "PrivateSwitchBase-input-15",
                                                            "root": "PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary",
                                                          }
                                                        }
                                                        color="secondary"
                                                        icon={<Memo />}
                                                        inputProps={
                                                          Object {
                                                            "aria-label": "admin.maintenance-checkbox-arialabel",
                                                            "data-indeterminate": false,
                                                          }
                                                        }
                                                        onChange={[Function]}
                                                        type="checkbox"
                                                        value={false}
                                                      >
                                                        <WithStyles(ForwardRef(IconButton))
                                                          className="PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                          color="secondary"
                                                          component="span"
                                                          onBlur={[Function]}
                                                          onFocus={[Function]}
                                                          tabIndex={null}
                                                        >
                                                          <ForwardRef(IconButton)
                                                            className="PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary"
                                                            classes={
                                                              Object {
                                                                "colorInherit": "MuiIconButton-colorInherit",
                                                                "colorPrimary": "MuiIconButton-colorPrimary",
                                                                "colorSecondary": "MuiIconButton-colorSecondary",
                                                                "disabled": "Mui-disabled",
                                                                "edgeEnd": "MuiIconButton-edgeEnd",
                                                                "edgeStart": "MuiIconButton-edgeStart",
                                                                "label": "MuiIconButton-label",
                                                                "root": "MuiIconButton-root",
                                                                "sizeSmall": "MuiIconButton-sizeSmall",
                                                              }
                                                            }
                                                            color="secondary"
                                                            component="span"
                                                            onBlur={[Function]}
                                                            onFocus={[Function]}
                                                            tabIndex={null}
                                                          >
                                                            <WithStyles(ForwardRef(ButtonBase))
                                                              centerRipple={true}
                                                              className="MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                              component="span"
                                                              disabled={false}
                                                              focusRipple={true}
                                                              onBlur={[Function]}
                                                              onFocus={[Function]}
                                                              tabIndex={null}
                                                            >
                                                              <ForwardRef(ButtonBase)
                                                                centerRipple={true}
                                                                className="MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                classes={
                                                                  Object {
                                                                    "disabled": "Mui-disabled",
                                                                    "focusVisible": "Mui-focusVisible",
                                                                    "root": "MuiButtonBase-root",
                                                                  }
                                                                }
                                                                component="span"
                                                                disabled={false}
                                                                focusRipple={true}
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                tabIndex={null}
                                                              >
                                                                <span
                                                                  aria-disabled={false}
                                                                  className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-12 MuiCheckbox-root MuiCheckbox-colorSecondary MuiIconButton-colorSecondary"
                                                                  onBlur={[Function]}
                                                                  onDragLeave={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onKeyUp={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onMouseLeave={[Function]}
                                                                  onMouseUp={[Function]}
                                                                  onTouchEnd={[Function]}
                                                                  onTouchMove={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <span
                                                                    className="MuiIconButton-label"
                                                                  >
                                                                    <input
                                                                      aria-label="admin.maintenance-checkbox-arialabel"
                                                                      checked={false}
                                                                      className="PrivateSwitchBase-input-15"
                                                                      data-indeterminate={false}
                                                                      onChange={[Function]}
                                                                      type="checkbox"
                                                                      value={false}
                                                                    />
                                                                    <ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                      <WithStyles(ForwardRef(SvgIcon))>
                                                                        <ForwardRef(SvgIcon)
                                                                          classes={
                                                                            Object {
                                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                              "colorError": "MuiSvgIcon-colorError",
                                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                              "root": "MuiSvgIcon-root",
                                                                            }
                                                                          }
                                                                        >
                                                                          <svg
                                                                            aria-hidden={true}
                                                                            className="MuiSvgIcon-root"
                                                                            focusable="false"
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <path
                                                                              d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                            />
                                                                          </svg>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                                    </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                  </span>
                                                                  <WithStyles(memo)
                                                                    center={true}
                                                                  >
                                                                    <ForwardRef(TouchRipple)
                                                                      center={true}
                                                                      classes={
                                                                        Object {
                                                                          "child": "MuiTouchRipple-child",
                                                                          "childLeaving": "MuiTouchRipple-childLeaving",
                                                                          "childPulsate": "MuiTouchRipple-childPulsate",
                                                                          "ripple": "MuiTouchRipple-ripple",
                                                                          "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                          "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                          "root": "MuiTouchRipple-root",
                                                                        }
                                                                      }
                                                                    >
                                                                      <span
                                                                        className="MuiTouchRipple-root"
                                                                      >
                                                                        <TransitionGroup
                                                                          childFactory={[Function]}
                                                                          component={null}
                                                                          exit={true}
                                                                        />
                                                                      </span>
                                                                    </ForwardRef(TouchRipple)>
                                                                  </WithStyles(memo)>
                                                                </span>
                                                              </ForwardRef(ButtonBase)>
                                                            </WithStyles(ForwardRef(ButtonBase))>
                                                          </ForwardRef(IconButton)>
                                                        </WithStyles(ForwardRef(IconButton))>
                                                      </ForwardRef(SwitchBase)>
                                                    </WithStyles(ForwardRef(SwitchBase))>
                                                  </ForwardRef(Checkbox)>
                                                </WithStyles(ForwardRef(Checkbox))>
                                                <WithStyles(ForwardRef(Typography))
                                                  className="MuiFormControlLabel-label"
                                                  component="span"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="MuiFormControlLabel-label"
                                                    classes={
                                                      Object {
                                                        "alignCenter": "MuiTypography-alignCenter",
                                                        "alignJustify": "MuiTypography-alignJustify",
                                                        "alignLeft": "MuiTypography-alignLeft",
                                                        "alignRight": "MuiTypography-alignRight",
                                                        "body1": "MuiTypography-body1",
                                                        "body2": "MuiTypography-body2",
                                                        "button": "MuiTypography-button",
                                                        "caption": "MuiTypography-caption",
                                                        "colorError": "MuiTypography-colorError",
                                                        "colorInherit": "MuiTypography-colorInherit",
                                                        "colorPrimary": "MuiTypography-colorPrimary",
                                                        "colorSecondary": "MuiTypography-colorSecondary",
                                                        "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                        "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                        "displayBlock": "MuiTypography-displayBlock",
                                                        "displayInline": "MuiTypography-displayInline",
                                                        "gutterBottom": "MuiTypography-gutterBottom",
                                                        "h1": "MuiTypography-h1",
                                                        "h2": "MuiTypography-h2",
                                                        "h3": "MuiTypography-h3",
                                                        "h4": "MuiTypography-h4",
                                                        "h5": "MuiTypography-h5",
                                                        "h6": "MuiTypography-h6",
                                                        "noWrap": "MuiTypography-noWrap",
                                                        "overline": "MuiTypography-overline",
                                                        "paragraph": "MuiTypography-paragraph",
                                                        "root": "MuiTypography-root",
                                                        "srOnly": "MuiTypography-srOnly",
                                                        "subtitle1": "MuiTypography-subtitle1",
                                                        "subtitle2": "MuiTypography-subtitle2",
                                                      }
                                                    }
                                                    component="span"
                                                  >
                                                    <span
                                                      className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                                    >
                                                      admin.display-checkbox
                                                    </span>
                                                  </ForwardRef(Typography)>
                                                </WithStyles(ForwardRef(Typography))>
                                              </label>
                                            </ForwardRef(FormControlLabel)>
                                          </WithStyles(ForwardRef(FormControlLabel))>
                                          <WithStyles(ForwardRef(Button))
                                            color="primary"
                                            onClick={[Function]}
                                            style={
                                              Object {
                                                "float": "right",
                                              }
                                            }
                                            variant="contained"
                                          >
                                            <ForwardRef(Button)
                                              classes={
                                                Object {
                                                  "colorInherit": "MuiButton-colorInherit",
                                                  "contained": "MuiButton-contained",
                                                  "containedPrimary": "MuiButton-containedPrimary",
                                                  "containedSecondary": "MuiButton-containedSecondary",
                                                  "containedSizeLarge": "MuiButton-containedSizeLarge",
                                                  "containedSizeSmall": "MuiButton-containedSizeSmall",
                                                  "disableElevation": "MuiButton-disableElevation",
                                                  "disabled": "Mui-disabled",
                                                  "endIcon": "MuiButton-endIcon",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "fullWidth": "MuiButton-fullWidth",
                                                  "iconSizeLarge": "MuiButton-iconSizeLarge",
                                                  "iconSizeMedium": "MuiButton-iconSizeMedium",
                                                  "iconSizeSmall": "MuiButton-iconSizeSmall",
                                                  "label": "MuiButton-label",
                                                  "outlined": "MuiButton-outlined",
                                                  "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                  "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                  "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                                                  "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                                                  "root": "MuiButton-root",
                                                  "sizeLarge": "MuiButton-sizeLarge",
                                                  "sizeSmall": "MuiButton-sizeSmall",
                                                  "startIcon": "MuiButton-startIcon",
                                                  "text": "MuiButton-text",
                                                  "textPrimary": "MuiButton-textPrimary",
                                                  "textSecondary": "MuiButton-textSecondary",
                                                  "textSizeLarge": "MuiButton-textSizeLarge",
                                                  "textSizeSmall": "MuiButton-textSizeSmall",
                                                }
                                              }
                                              color="primary"
                                              onClick={[Function]}
                                              style={
                                                Object {
                                                  "float": "right",
                                                }
                                              }
                                              variant="contained"
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                onClick={[Function]}
                                                style={
                                                  Object {
                                                    "float": "right",
                                                  }
                                                }
                                                type="button"
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="button"
                                                  disabled={false}
                                                  focusRipple={true}
                                                  focusVisibleClassName="Mui-focusVisible"
                                                  onClick={[Function]}
                                                  style={
                                                    Object {
                                                      "float": "right",
                                                    }
                                                  }
                                                  type="button"
                                                >
                                                  <button
                                                    className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                                                    disabled={false}
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "float": "right",
                                                      }
                                                    }
                                                    tabIndex={0}
                                                    type="button"
                                                  >
                                                    <span
                                                      className="MuiButton-label"
                                                    >
                                                      <WithStyles(ForwardRef(Typography))
                                                        color="inherit"
                                                        noWrap={true}
                                                        style={
                                                          Object {
                                                            "marginTop": 3,
                                                          }
                                                        }
                                                      >
                                                        <ForwardRef(Typography)
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTypography-alignCenter",
                                                              "alignJustify": "MuiTypography-alignJustify",
                                                              "alignLeft": "MuiTypography-alignLeft",
                                                              "alignRight": "MuiTypography-alignRight",
                                                              "body1": "MuiTypography-body1",
                                                              "body2": "MuiTypography-body2",
                                                              "button": "MuiTypography-button",
                                                              "caption": "MuiTypography-caption",
                                                              "colorError": "MuiTypography-colorError",
                                                              "colorInherit": "MuiTypography-colorInherit",
                                                              "colorPrimary": "MuiTypography-colorPrimary",
                                                              "colorSecondary": "MuiTypography-colorSecondary",
                                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                              "displayBlock": "MuiTypography-displayBlock",
                                                              "displayInline": "MuiTypography-displayInline",
                                                              "gutterBottom": "MuiTypography-gutterBottom",
                                                              "h1": "MuiTypography-h1",
                                                              "h2": "MuiTypography-h2",
                                                              "h3": "MuiTypography-h3",
                                                              "h4": "MuiTypography-h4",
                                                              "h5": "MuiTypography-h5",
                                                              "h6": "MuiTypography-h6",
                                                              "noWrap": "MuiTypography-noWrap",
                                                              "overline": "MuiTypography-overline",
                                                              "paragraph": "MuiTypography-paragraph",
                                                              "root": "MuiTypography-root",
                                                              "srOnly": "MuiTypography-srOnly",
                                                              "subtitle1": "MuiTypography-subtitle1",
                                                              "subtitle2": "MuiTypography-subtitle2",
                                                            }
                                                          }
                                                          color="inherit"
                                                          noWrap={true}
                                                          style={
                                                            Object {
                                                              "marginTop": 3,
                                                            }
                                                          }
                                                        >
                                                          <p
                                                            className="MuiTypography-root MuiTypography-body1 MuiTypography-colorInherit MuiTypography-noWrap"
                                                            style={
                                                              Object {
                                                                "marginTop": 3,
                                                              }
                                                            }
                                                          >
                                                            admin.save-button
                                                          </p>
                                                        </ForwardRef(Typography)>
                                                      </WithStyles(ForwardRef(Typography))>
                                                    </span>
                                                    <WithStyles(memo)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(memo)>
                                                  </button>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(Button)>
                                          </WithStyles(ForwardRef(Button))>
                                        </div>
                                      </div>
                                    </ForwardRef(Paper)>
                                  </WithStyles(ForwardRef(Paper))>
                                </div>
                              </MaintenancePage>
                            </WithStyles(MaintenancePage)>
                          </Connect(WithStyles(MaintenancePage))>
                        </div>
                      </Route>
                    </Switch>
                  </div>
                </ForwardRef(Paper)>
              </WithStyles(ForwardRef(Paper))>
            </AdminPage>
          </WithStyles(AdminPage)>
        </Connect(WithStyles(AdminPage))>
      </Router>
    </MemoryRouter>
  </ThemeProvider>
</Provider>
`;
